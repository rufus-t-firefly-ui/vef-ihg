<?xml version="1.0" encoding="UTF-8"?>
<root>

<host id="imagebam.com">
<urlpattern>^https?:\/\/([^/]+\.)?imagebam\.com\/.*</urlpattern>
<searchpattern><![CDATA[function(pageData, pageUrl) {
	var retVal = {imgUrl: null, fileName: null, status: "ABORT"};
	// Search for <img ... class="main-image" ... >
	var iTag = (pageData.match(/<img\b[^>]*?\bclass\s*=\s*('|")main-image.*\1[^>]*?>/i)||[])[0];
	if (iTag) {
		var iUrl  = (iTag.match(/\bsrc\s*=\s*('|")(.*?)\1/i)||[])[2];
		var iName = (iTag.match(/\balt\s*=\s*('|")(.*?)\1/i)||[])[2];
		if (iUrl) {
			retVal.imgUrl = iUrl;
			retVal.status = "OK";
			if (iName) {  // exists and is not empty
				retVal.fileName = iName;
			}
		}
	}
	return retVal;
}]]></searchpattern>
</host>

<host id="imagevenue.com">
<urlpattern>^https?:\/\/.*imagevenue\.*</urlpattern>
<searchpattern><![CDATA[function(pageData, pageUrl) {
	var retVal = {imgUrl: null, fileName: null, status: "ABORT"};
	// Search for <img ... id="main-image" ... >
	var iTag = (pageData.match(/<img\b[^>]*?\bid\s*=\s*('|")main-image\1[^>]*?>/i)||[])[0];
	if (iTag) {
		var iUrl  = (iTag.match(/\bsrc\s*=\s*('|")(.*?)\1/i)||[])[2];
		var iName = (iTag.match(/\balt\s*=\s*('|")(.*?)\1/i)||[])[2];
		if (iUrl) {
			retVal.imgUrl = iUrl;
			retVal.status = "OK";
			if (iName) {  // exists and is not empty
				retVal.fileName = iName;
			}
		}
	}
	return retVal;
}]]></searchpattern>
</host>

<host id="imagetwist.com">
<urlpattern>^https?:\/\/([^/]+\.)?imagetwist\.com\/[\w]{12}($|\/)</urlpattern>
<searchpattern>"\bclass\s*=\s*('|\").*?(pic|img).*?\1"</searchpattern>
</host>

<host id="imgbox.com">
<urlpattern>^https?:\/\/([^/]+\.)?imgbox\.com\/(?!(comments|register|settings)$)\w{8}$</urlpattern>
<searchpattern><![CDATA[function(pageData, pageUrl) {
	var retVal = {imgUrl: null, fileName: null, status: "ABORT"};
	// Search for <img ... id="img" ... >
	var iTag = (pageData.match(/<img\b[^>]*?\bid\s*=\s*('|")img\1[^>]*?>/i)||[])[0];
	if (iTag) {
		var iUrl  = (iTag.match(/\bsrc\s*=\s*('|")(.*?)\1/i)||[])[2];
		var iName = (iTag.match(/\btitle\s*=\s*('|")(.*?)\1/i)||[])[2];
		if (iUrl) {
			retVal.imgUrl = iUrl;
			retVal.status = "OK";
			if (iName) {  // exists and is not empty
				retVal.fileName = iName;
			}
		}
	}
	return retVal;
}]]></searchpattern>
</host>

<host id="pimpandhost.com">
<urlpattern>^https?:\/\/([^/]+\.)?pimpandhost\.com\/image\/(show\/id\/)?\d+</urlpattern>
<searchpattern><![CDATA[function(pageData, pageUrl) {
	var retVal = {imgUrl: null, fileName: null, status: "ABORT"};
	pageUrl = pageUrl.replace("/image/show/id/", "/image/");
	var rUrl = (pageUrl.match(/^https?:\/\/([^/]+\.)?pimpandhost\.com\/image\/\d+/i)||[])[0];
	rUrl += "?size=original";

	retVal = httpGet(rUrl, pageUrl).then(response => {
		// Search for <img ... class="original" ... >
		var iTag  = (response.pageData.match(/<img\b[^>]*?\bclass\s*=\s*('|")original\1[^>]*?>/i)||[])[0];
		var iName = (response.pageData.match(/\bdata-rrssb-title\s*=\s*('|")(.*?)\1/i)||[])[2];  // no extension here
		if (iTag) {
			var iUrl  = (iTag.match(/\bsrc\s*=\s*('|")(.*?)\1/i)||[])[2];
			if (iName) { // exists and is not empty
				// get extension from iUrl
				var extension = iUrl.substring(((iUrl.lastIndexOf(".") - 1) >>> 0) + 2);
				if (extension) iName += "." + extension;
			}
		}
		return iUrl ? {imgUrl: iUrl, fileName: iName, status: "OK"} : {status: "ABORT"};
	});
	return retVal;

	function httpGet(targetUrl, refererUrl) {
		return new Promise((fulfill, reject) => {
			const req = new XMLHttpRequest();
			req.onload = function() {
				if (this.status === 200)  // The request has succeeded. 
					fulfill({pageData: this.responseText, pageUrl: this.channel.URI.spec});
				else reject(this.statusText);
			};
			req.onerror = function() {
				reject(new Error("XMLHttpRequest Error: " + this.statusText));
			};
			req.open("GET", targetUrl, true);
			req.setRequestHeader("Referer", refererUrl);
			req.send();
		});
	}
}]]></searchpattern>
</host>

<host id="pixhost.to">
<urlpattern>^https?:\/\/([^/]+\.)?pixhost\.to\/show\/.+$</urlpattern>
<searchpattern><![CDATA[function(pageData, pageUrl) {
	var retVal = {imgUrl: null, fileName: null, status: "ABORT"};
	// Search for <img ... id="image" ... />
	var iTag = (pageData.match(/<img\b[^>]*?\bid\s*=\s*('|")image\1[^>]*?>/i)||[])[0];
	if (iTag) {
		var iUrl  = (iTag.match(/\bsrc\s*=\s*('|")(.*?)\1/i)||[])[2];
		if (iUrl) {
			retVal.imgUrl = iUrl;
			retVal.status = "OK";
			var iName = (iTag.match(/\balt\s*=\s*('|")(.*?)\1/i)||[])[2];
			// Fallback: Get original filename from url, part after last slash
			if (!iName) iName = iUrl.split('/').pop();
			iName = iName.replace(/^\d*_/, "");  // remove leading digits and underscore
			if (iName) {  // exists and is not empty
				retVal.fileName = iName;
			}
		}
	}
	return retVal;
}]]></searchpattern>
</host>

<host id="postimg.cc">
<urlpattern>^https?:\/\/([^/]+\.)?postimg\.(cc|org)\/(\w{8}\b|image(\.php\?|\/))</urlpattern>
<searchpattern><![CDATA[function(pageData, pageUrl) {
	var retVal = {imgUrl: null, fileName: null, status: "ABORT"};
	// Search for <a ... id="download" ... >
	var iTag = (pageData.match(/<a\b[^>]*?\bid\s*=\s*('|")download\1[^>]*?>/i)||[])[0];
	if (iTag) {
		var iUrl  = (iTag.match(/\bhref\s*=\s*('|")(.*?)\1/i)||[])[2];
		if (iUrl) {
			retVal.imgUrl = iUrl;
			retVal.status = "OK";
			var iName = (pageData.match(/<title>(.*?)<\/title>/i)||[])[1];
			iName = iName.replace(/\s*—\s*[^—]*$/i, "");  // remove trailing host name
			if (iName) {  // exists and is not empty
				var extension = (iUrl.match(/[^/?]\.([^./?]+)($|\?)/)||[])[1];
				if (extension) iName += "." + extension;
				retVal.fileName = iName;
				//alert(retVal.fileName);  // IHG v1.7.0.4c does not use this filename
			}
		}
	}
	return retVal;
}]]></searchpattern>
</host>

<host id="turboimagehost.com">
<urlpattern>^https?:\/\/([^/]+\.)?turboimagehost\.com\/p\/\d+</urlpattern>
<searchpattern>"ID: imageid"</searchpattern>
</host>

<host id="zzz-wordpress-gallery">
<urlpattern>^https?:\/\/.+?\/wp-content\/uploads\/.*?\.(jpe?g|png|gif)</urlpattern>
<searchpattern>"REPLACE: '(^https?:\\/\\/.+?\\/wp-content\\/uploads\\/.*?)(-\\d+x\\d+)?\\.(jpe?g|png|gif)' , '$1.$3'"</searchpattern>
</host>
</root>